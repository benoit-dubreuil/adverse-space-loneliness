import groovy.transform.Field

import static groovy.io.FileType.FILES

@Field def final IMG_STRIP_SUFFIX_REGEX = /^.*((_strip\d)(\.(png|(jpg|jpeg)|gif|(bmp|dib)|(tiff|tif)|wbmp)))$/
def final ASSETS_DIR = "${project.projectDir}/assets/"
def final RAW_DIR = ASSETS_DIR + "raw/"
def final GENERATED_DIR = ASSETS_DIR + "generated/"

/**
 * Gets all the image strip files from the supplied directory. Requires an actual version of Groovy and not the default one.
 *
 * @param directory The directory from which to recursively get the image strip files.
 *
 * @return The image strip files array.
 */
def getImageStrips(directory) {
    def files = []
    new File(directory).traverse(type: FILES) {
        if (it.getName() ==~ IMG_STRIP_SUFFIX_REGEX) {
            files.add(it)
        }
    }

    return files
}

/**
 * Splits the image strips from the raw folder into multiple image frames. The results are save in the raw folder.
 */
task splitImageStrips(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.adversespaceloneliness.game.assets.imagesplitter.ImageSplitter'

    def files = getImageStrips(RAW_DIR)

    args files

    inputs.files(RAW_DIR)
    outputs.dir(RAW_DIR)
}

/**
 * Generates the assets from the raw folder into the generated folder.
 */
task generateAssets(type: JavaExec, dependsOn: 'splitImageStrips') {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.adversespaceloneliness.game.assets.Main'

    inputs.files(RAW_DIR)
    outputs.dir(GENERATED_DIR)
}